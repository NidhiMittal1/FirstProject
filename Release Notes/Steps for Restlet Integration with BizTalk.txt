Steps for integrating Restlet with BizTalk:
================================================================

Step 1.
Create the RESTlet File and Add It to the File Cabinet

a. Create a .js file and add your code to it. This single script file should include GET, POST, DELETE, or PUT function(s) as necessary.

Sample

// Create a standard NetSuite record
function createRecord(datain)
{
	var err = new Object();
	// Validate if mandatory record type is set in the request
	if (!datain.recordtype)
	{
		err.status = "failed";
		err.message= "missing recordtype";
		return err;
	}
	var record = nlapiCreateRecord(datain.recordtype);
	for (var fieldname in datain)
	{
		if (datain.hasOwnProperty(fieldname))
		{
			if (fieldname != 'recordtype' && fieldname != 'id')
			{
				var value = datain[fieldname];
				if (value && typeof value != 'object') // ignore other type of parameters
				{
					record.setFieldValue(fieldname, value);
				}
			}
		}
	}
	var recordId = nlapiSubmitRecord(record);
	nlapiLogExecution('DEBUG','id='+recordId);
	var nlobj = nlapiLoadRecord(datain.recordtype,recordId);
	return nlobj;
}

b. Once you have created a .js file with your RESTlet code, you need to add this file to the NetSuite file cabinet.

Go to Documents > Files > File Cabinet, and select the folder where you want to add the file. It is recommended that you add your file to the SuiteScripts folder, but it can be added to any other folder of your choice.

Click Add File, and browse to the .js file.

Step 2.
Create the RESTlet Script Record

a. To create a RESTlet script record, Go to Setup > Customization > Scripts > New, and click RESTlet. Complete fields in the script record and save.
Although you do not need to set every field on the Script record, at a minimum you must provide a Name for the Script record, load your SuiteScript file to the record, and specify at least one of the following executing functions on the Scripts tab: GET, POST, DELETE, or PUT.

Step 3.
Define RESTlet Deployment(s)

a. When you save your Script record, you can immediately create a Script Deployment record by selecting Save and Deploy from the Script record Save button. 
If you clicked Save, immediately afterwards you can click Deploy Script on the script record.
If you want to update a deployment that already exists, go to Customization > Scripting > Script Deployments > [deployment] > Edit.
Complete fields in the script deployment record and click Save. If you want to debug the script, set the Status to Testing.

b. Once you have saved a RESTlet deployment, the deployment record includes the URL used to invoke the RESTlet. For a RESTlet called from an externally hosted client, use the External URL. For a RESTlet called from a client hosted by NetSuite, use the URL that does not include the domain.

Step 4.
Call Restlet from external client say BizTalk.

a. Create a custom send pipeline component that transforms input xml to JSON string.
Create a custom pipeline SendJSONPipeline with the pipeline component created.

b. Create and configure a static send port with WCF-WebHttp adapter.
Click on configure.
Paste the External URL saved from Step 3. 
Under HTTP Method and URL mapping, write the HTTP method that you want to perform based on the restlet file (POST/GET etc)
Go to Security tab, set Security mode to Transport.
Go to Authorization tab, Under Outbound HTTP headers, write the custom headers that you need to pass
eg. 
Authorization: NLAuth nlauth_account=TSTDRV1492279, nlauth_email=Ravindranath.Chilamkuri@in.ey.com, nlauth_signature=EYIndia_2016, nlauth_role=3
Content-Type: application/json
Change the send pipeline to the send pipeline created above.

c. Send input xml (sample below) to this send port, where the pipeline transforms the xml to json and send to restlet.

sample
<xml>
<recordtype>customer</recordtype>
<entityid>TEST_NIKHIL_EY2</entityid>
<companyname>TEST_NIKHIL_EY2</companyname>
<subsidiary>1</subsidiary>
</xml>


